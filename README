Suggestions for articles

Flags: 

[ ] : up for adoption
[A] : "Assigned", someone volunteered to write it
[P] : "Pending", someone started writing that article
[R] : "Review", ready for review (needs typos fixes and proofreading)
[D] : "Done", ready for publication
[L] : "Last Review", reviewed but still some things left undone

==== PUBLISHING ORDER:

01. [D] Dancer 1.2 is released! article based on the changelog with a word or
        two about upcoming change planed for 1.4

02. [D] Why routes? How does route-based web works and why is it more fun?

03. [D] dancr (tutorial)

04. [D] Dancer::Plugin::Database (bigpresh)

05. [D] Writing a Dancer plugin (Dancer::Plugin::MobilePhone that detects if the
        user agent is a mobile phone and sets some templates variables,
        or changes the base url to m.domain...)
        [ Sukria ]

06. [D] Writing Dancer specific tests. (already covered in my article about
        writing a plugin, maybe I should split them in two parts? sukria)

07. [D] How to work with sessions in cookies (Dancer::Session::Cookie,
        kappa@{github,cpan})

08. [D] REST webservices (with Dancer::Plugin::REST and Serializers). API (dams for
        Dancer::Plugin::REST)

09. [D] ournowrimo app (yanick champoux)

10. [D] Deploying Dancer (nmani)
        (Could someone with Nginx experience check the article?)

11. [D] Dancer::Plugin::DBIC (dams)

12. [D] Feed

13. [D] Jukebox

14. [D] Starman

15. [D] shrinkr (tutorial)

16. [P] Graph

17. [P] Auth

18. [D] Auth Twitter OAuth

19. [D] Dancer Internals

20. [D] Dancer Session Backend

21. [D] Dancer Logger Backend

22. [D] Dancer Template Backend

23. [P] Plack middlewares

24. [P] Merge of Ecosystem + Sitemap

25. [P] How to contribute to Dancer

==== LOOKING FOR AN AUTHOR (BUT WE HAVE FUCKING TOO MANY ARTICLES! MAYBE CATALYST WANT THEM?)

xx. [ ] Common practiced with Dancer apps (move to template_toolkit or your favorite
        template system, etc.)

xx. [ ] Profiling/Debugging/Performance-testing Dancer applications.

xx. [ ] load_app (note: not sure if we should speak of load_app as we'll drop it after 1.2)

